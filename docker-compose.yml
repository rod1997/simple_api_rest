version: "3.5"

services:
  api1:
      build:
        context: . # Use an image built from the specified dockerfile in the `polling-app-server` directory.
        dockerfile: Dockerfile
      ports:
        - "80:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
      restart: always
      depends_on:
        - db # This service depends on mysql. Start that first.
      environment: # Pass environment variables to the service
        SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/api_bank?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
        SPRING_DATASOURCE_USERNAME: callicoder
        SPRING_DATASOURCE_PASSWORD: callicoder
      networks: # Networks to join (Services on the same network can communicate with each other using their name)
        - backend
      volumes:
        - ./:/a

  #api:
   # build: .
    #command: "java -jar /app.jar"
    #ports:
  #    - "80:8080"
   # volumes:
    #  - ./target/apibank-0.0.1-SNAPSHOT.jar:/app.jar

  db:
    #image: mysql:5.7
    build:
      context: . # Use an image built from the specified dockerfile in the `polling-app-server` directory.
      dockerfile: Dockerfile_db.docker
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: api_bank
      MYSQL_USER: callicoder
      MYSQL_PASSWORD: callicoder
      MYSQL_ROOT_PASSWORD: root
    #volumes:
      #- db-data:/var/lib/mysql
    networks:
      - backend
    expose:
       - "3306"

volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend: